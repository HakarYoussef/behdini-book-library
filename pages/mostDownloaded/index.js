import Head from 'next/head';
import { HiPlus } from 'react-icons/hi';
import { Card } from '../../components';
import { getClient } from '../../lib/sanity.server';
import groq from 'groq';
import { useState } from 'react';
import * as _ from 'lodash';

const MostDownloaded = ({ posts }) => {
  const [isCompleted, setIsCompleted] = useState(false);
  const [index, setIndex] = useState(40);

  posts.sort((a, b) => (a.qty > b.qty ? 1 : -1));

  function loadMore() {
    setIndex((prev) => prev + 40);
  }

  return (
    <div>
      <Head>
        <title>Behdini Book Library</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="relative z-50 pb-20 pl-5 pr-5 mt-20 bg-gray-900 lg:px-20 lg:grid sm:mx-5 sm:grid-cols-1 lg:grid-cols-12">
        <div className="col-span-11 ">
          <div className="grid gap-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2">
            {_.sortBy(posts, 'downloads', 'desc')
              .reverse()
              .slice(0, index)
              .map((post) => (
                <div key={post._id}>
                  <Card post={post} />
                </div>
              ))}
          </div>
        </div>

        {isCompleted ? (
          ''
        ) : (
          <button
            onClick={loadMore}
            type="button"
            className="flex items-center mt-16 group"
          >
            <HiPlus className="mr-2 text-lg text-gray-400 duration-150 group-hover:text-cyan-500" />
            <span className="text-gray-400 duration-150 group-hover:text-cyan-500">
              زێدەتر ببینە
            </span>
          </button>
        )}
      </div>
    </div>
  );
};

export async function getStaticProps({ preview = false }) {
  const posts = await getClient(preview).fetch(groq`
  *[_type == 'post'] | order(publishedAt desc){
    _id,
    title,
    "authorName": author-> name,
    "authorSlug": author-> slug,
    "categories": categories[]->{id, title,slug},
    mainImage,
    slug,
    downloads,
    prepare,
    downloadLink,
  }
  `);

  return {
    props: {
      posts,
    },
  };
}

export default MostDownloaded;
